1、初始化仓库
git init

git add -A 

git commit -m 'comment'

git status

git log

git diff [文件名] 查看变化

二、版本回退
git log
git reset --hard 前7位版本号  回到之前版本


又回到最新版本
查看版本号:
git reflog   

git reset --hard 前7位版本号  回到之后版本

又回到最新版本
git reflog
git reset --hard 前7位版本号  回到之后版本

回到上一个版本：
git reset --hard HEAD^

回到上上一个版本：
git reset --hard HEAD^^

回到前100个版本：
git reset --hard HEAD~100


查看文件内容命令：
cat 文件名

撤销修改:

git checkout 文件名 意思就是，把指定文件在工作区做的修改全部撤销
两种情况：
1、readme.txt自动修改后，还没有放到暂存区，使用 撤销修改就回到和版本库一模一样的状态。
2、另外一种是readme.txt已经放入暂存区了，接着又作了修改，撤销修改就回到添加暂存区后的状态。


删除文件命令：
rm 文件名

三、清除未追踪的文件
git clean -xf
注：这个命令的杀伤力比较大，它删除当前目录下所有没有track过的文件。不管它是否是.gitignore文件里面指定的文件夹和文件。


四、关于git status中文乱码问题
解决办法：
git config --global core.quotepath false


git log 中文乱码问题
git config --global i18n.commitencoding utf-8
git config --global i18n.logoutputencoding utf-8


六、本地Git和Github的连接
1、到github注册账号
2、本地配置用户名和邮箱
git config --global user.name "你的用户名"
git config --global user.email "你的邮箱"
或者
你直接在config文件里改，位置在 C:\Users\你的用户名\.gitconfig

查看配置：
git config -l

远程仓库：

3、生成ssh key
ssh-keygen -t rsa -C "你的邮箱"

直接回车即可

或打开：
C:\Users\cjp\.ssh文件夹下的
id_rsa.pub文件里面的key

将生成的ssh key复制到剪贴板，执行 clip < ~/.ssh/id_rsa.pub （或者到上图提示的路径里去打开文件并复制）

测试关联是成功：
ssh -T git@github.com


4、关联github
git remote add origin git@github.com:godman581/gitlearning.git（github地址ssh）

git push -u origin master

以后想在commit后同步到Github上，只要直接执行 git push 就行啦：

以上只有一个主分支叫：master

七、Github的其他介绍
1）获取其他人的远程仓库
1、复制别人远程仓库的SSH。方法和上面关联git一样，进入仓库页面后，就能找到SSH地址。
2、执行以下命令：

git clone 复制的SSH地址   （是从远程仓库下载代码到本地）



六：创建与合并分支

查看当前分支命令：
git branch

创建分支命令：
git branch 分支名

切换到指定分支命令：
git checkout 分支名

创建并切换到分支：
git checkout -b 分支名

git checkout 命令加上 –b参数表示创建并切换，相当于如下2条命令

git branch dev

git checkout dev

合并分支命令：


git merge 要合并的分支名

(通常合并分支时，git一般使用”Fast forward”模式)

说明：git merge命令用于合并指定分支到当前分支上

例：把dev分支合并到master，先切换到master分支，并执行以下命令：
git merge dev


总结创建与合并分支命令如下：

查看分支：git branch

创建分支：git branch name

切换分支：git checkout name

创建+切换分支：git checkout –b name

合并某分支到当前分支：git merge name   (通常合并分支时，git一般使用”Fast forward”模式)

删除分支：git branch –d name


分支管理策略

通常合并分支时，git一般使用”Fast forward”模式，在这种模式下，删除分支后，会丢掉分支信息，现在我们来使用带参数 –no-ff来禁用”Fast forward”模式。首先我们来做demo演示下：

创建一个dev分支。
修改readme.txt内容。
添加到暂存区。
切换回主分支(master)。
合并dev分支，使用命令 git merge –no-ff  -m “注释” dev
查看历史记录